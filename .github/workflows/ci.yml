name: IMDB Sentiment Workflow (Demo)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  train:
    runs-on: ubuntu-latest

    env:
      DAGSHUB_USER: "Dharsh"
      DAGSHUB_TOKEN: "4f3284cea30d20043975370eef81965d94e13fe1"
      DAGSHUB_REPO: "dharsh/imdb-response-demo"
      MLFLOW_TRACKING_URI: "https://dagshub.com/Dharsh/imdb-response-demo.mlflow"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[all] dagshub mlflow

      - name: Configure Git & DVC remote
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          dvc remote remove dagshub || echo "No existing remote"
          dvc remote add -d dagshub https://dagshub.com/Dharsh/imdb-response-demo.dvc
          dvc remote modify dagshub --local auth basic
          dvc remote modify dagshub --local user Dharsh
          dvc remote modify dagshub --local password 4f3284cea30d20043975370eef81965d94e13fe1

      - name: Pull dataset from Dagshub
        run: dvc pull -r dagshub

      - name: Run training
        run: python src/train.py

      - name: Commit DVC outputs
        run: |
          dvc commit
          git add dvc.lock .dvc/config
          git commit -m "Auto: update model artifacts" || echo "No changes"
          git push origin main

      - name: Push DVC artifacts to Dagshub
        run: dvc push -r dagshub
