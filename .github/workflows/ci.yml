name: IMDB Sentiment CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build-and-train:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./

    steps:
      # ------------------------
      # Checkout repo
      # ------------------------
      - name: Checkout code
        uses: actions/checkout@v3

      # ------------------------
      # Setup Python
      # ------------------------
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # ------------------------
      # Install dependencies
      # ------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc[s3]  # adjust for your remote type

      # ------------------------
      # Configure DVC remote (Dagshub)
      # ------------------------
      - name: Configure DVC remote
        run: |
          dvc remote modify dagshub --local auth basic
          dvc remote modify dagshub --local user Dharsh
          dvc remote modify dagshub --local password 4f3284cea30d20043975370eef81965d94e13fe1

      # ------------------------
      # Clean local DVC cache and outputs
      # ------------------------
      - name: Clean DVC cache and outputs
        run: |
          rm -rf .dvc/cache
          rm -rf data/processed/*
          rm -rf artifacts/*
          rm -rf metrics/*
          rm -f model.pkl

      # ------------------------
      # Pull all DVC outputs fresh from remote
      # ------------------------
      - name: Pull DVC outputs fresh
        run: |
          dvc pull -r dagshub --force

      # ------------------------
      # Reproduce pipeline if anything changed
      # ------------------------
      - name: Reproduce DVC pipeline
        run: dvc repro

      # ------------------------
      # Verify files are present
      # ------------------------
      - name: Verify pulled files
        run: |
          echo "Data processed:"
          ls -l data/processed/
          echo "Artifacts:"
          ls -l artifacts/
          echo "Metrics:"
          ls -l metrics/
          echo "Model:"
          ls -l model.pkl

      # ------------------------
      # Test API import
      # ------------------------
      - name: Test API import
        run: |
          python -c "from src import app; print('App imported successfully')"
